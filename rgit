#!/bin/bash

MAX_PARALLELL_JOBS=7

function invokeGit() {
  pushd . > /dev/null
  cd "${repo%%/.git}"
  shift
  git "$@" > .git/rgit.log 2>&1
  popd > /dev/null
}

function showProgress() {
  echo -ne "  $(progress)\r"
}

showProgress
 
repos=()
while IFS=  read -r -d $'\0'; do
    repos+=("$REPLY")
done < <(find . -type d -name '.git' -print0)

if [ ${#repos[@]} -eq 0 ]; then
  echo "No git repositories found."
  exit 0
fi

for repo in ${repos[@]}; do
  if [ -f "$repo/rgit.ignore" ]; then
    continue
  fi

  # Limit number of parallell threads to unchoke the remote
  while [ $(jobs -r | grep invokeGit | wc -l) -gt $MAX_PARALLELL_JOBS ]; do
    showProgress
    sleep 0.1
  done

  if [ $# -eq 0 ]; then
    invokeGit "$repo" status --porcelain
  else
    invokeGit "$repo" "$@" &
  fi
done

while [ "$(jobs -r | grep invokeGit)" != "" ]; do
  showProgress
  sleep 0.1
done

silentCount=0
for repo in ${repos[@]}; do
  if [ -f "$repo/rgit.ignore" ]; then
    continue
  fi
  if [ -s "$repo/rgit.log" ]; then
    echo -e "\n\033[1;34m${repo%%/.git}\033[0m"
    cat "$repo/rgit.log"
  else
    silentCount=$((silentCount + 1))
  fi
  rm "$repo/rgit.log" > /dev/null 2>&1
done

if [ $silentCount -gt 0 ]; then
  echo "Suppressed output from $silentCount silent commands"
fi
